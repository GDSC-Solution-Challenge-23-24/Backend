plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//implementation 'mysql:mysql-connector-java:8.0.28'
	//implementation 'io.springfox:springfox-boot-starter:3.0.0'
	//implementation 'org.mindrot:jbcrypt:0.4'

	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0' // 사용 중인 서블릿 API 버전으로 변경


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'


	// MySQL
	implementation 'mysql:mysql-connector-java:8.0.31'

	// Swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	// BCrypt
	implementation 'org.mindrot:jbcrypt:0.4'

	// package javax.persistence error 처리
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//  javax.servlet.http.HttpServletRequest  error 처리
	implementation 'javax.servlet:javax.servlet-api:3.1.0'

	// org.hibernate.HibernateException  error 처리
	implementation 'org.hibernate:hibernate-core:6.1.0.Final'

	// swagger
	// implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

	//p6spy 적용 : SQL로그 보기 쉽도록
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'
	implementation 'com.auth0:java-jwt:3.18.2'

	// 스프링 시큐리티 구글 로그인 관련 설정
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'




}

/*
hibernate {
	// Hibernate Dialect
	dialect = 'org.hibernate.dialect.MySQLDialect'

}
*/
ext['hibernate.dialect'] = 'org.hibernate.dialect.MySQLDialect'

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}